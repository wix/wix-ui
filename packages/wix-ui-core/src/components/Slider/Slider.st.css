:import {
  -st-from: "../../mixins/calc";
  -st-default: calc
}

:vars {
  tickLineWidth: 1px;
  tickLineHeight: 10px;
  tickDotSize: 3px;
  tickMarksGap: 12px;
  tooltipGap: 10px;
}

.root {
  -st-states: orientation(enum(vertical, horizontal)), tickMarksPosition(enum(normal, middle, across)), tickMarksShape(enum(line, dot)), dir(enum(ltr, rtl)), disabled;
  position: relative;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  outline: none !important;
}

.root * {
  box-sizing: border-box;
}

.tooltip {
  -st-states: normalPosition, acrossPosition;
  position: absolute;
  background: #363636;
  color: #fff;
  padding: 4px 12px;
  text-align: center;
  font-size: 14px;
  line-height: 1.5;
  border-radius: 3px;
  white-space: nowrap;
}

.tooltip::after,
.tooltip::before {
  content: ' ';
  position: absolute;
  margin-left: -8px;
  border-width: 8px;
  border-style: solid;
}

.track {
  z-index: 0;
  width: 100%;
  height: 25%;
  position: relative;
  cursor: pointer;
  background: #dadada;
  opacity: 1;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid transparent;
  min-height: 1px;
}

.inner {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.trackFill {
  position: absolute;
  background: linear-gradient(to right, #4992e3, #70bff3);
  height: 100%;
  width: 100%;
}

.root:dir(rtl) .trackFill {
  right: 0;
}

.root:orientation(vertical) .track {
  width: 25%;
  height: 100%;
}

.root:orientation(vertical) .trackFill {
  background: linear-gradient(to top, #4992e3, #70bff3);
}

.thumb {
  z-index: 2;
  position: absolute;
  cursor: pointer;
}

.thumbShape {
  -st-states: shapeType(enum(circle, square, rectangle, bar));
  width: 100%;
  height: 100%;
  background: green;
  border: 2px solid blue;
}

.thumbShape:shapeType(circle) {
  border-radius: 50%;
}

.thumbShape:shapeType(square) {
  border-radius: 7px;
}

.thumbShape:shapeType(rectangle) {
  border-radius: 37px;
}

.thumbShape:shapeType(bar) {
  border-radius: 7px;
}

.root:orientation(horizontal) .tooltip:normalPosition {
  left: 50%;
  top: calc(-7px - value(tooltipGap));
  transform: translate(-50%, -100%);
}
.root:orientation(horizontal) .tooltip:acrossPosition {
  left: 50%;
  bottom: calc(-7px - value(tooltipGap));
  transform: translate(-50%, 100%);
}
.root:orientation(vertical) .tooltip:normalPosition {
  left: 50%;
  left: calc(-7px - value(tooltipGap));
  transform: translate(-100%, -50%);
}
.root:orientation(vertical) .tooltip:acrossPosition {
  right: calc(-7px - value(tooltipGap));
  transform: translate(100%, -50%);
}

.root:orientation(horizontal) .tooltip:normalPosition::after,
.root:orientation(horizontal) .tooltip:normalPosition::before {
  border-color: #363636 transparent transparent transparent;
  top: 100%; /* At the bottom of the tooltip */
  left: 50%;
}

.root:orientation(horizontal) .tooltip:acrossPosition::after,
.root:orientation(horizontal) .tooltip:acrossPosition::before {
  border-color: transparent transparent #363636 transparent;
  bottom: 100%; /* At the bottom of the tooltip */
  left: 50%;
}

.root:orientation(vertical) .tooltip {
  top: 50%;
}

.root:orientation(vertical) .tooltip::after,
.root:orientation(vertical) .tooltip::before {
  top: 50%;
  transform: translateY(-50%);
}

.root:orientation(vertical) .tooltip:normalPosition::after,
.root:orientation(vertical) .tooltip:normalPosition::before {
  left: 100%;
  margin-left: 0;
  border-color: transparent transparent transparent #363636;
}

.root:orientation(vertical) .tooltip:acrossPosition::after,
.root:orientation(vertical) .tooltip:acrossPosition::before {
  right: 100%;
  border-color: transparent #363636 transparent transparent;
}

.tick {
  display: inline-block;
  position: absolute;
  background: #000;
  cursor: pointer;
}

.root:orientation(horizontal):tickMarksShape(line) .tick {
  width: value(tickLineWidth);
  height: value(tickLineHeight);
}

.root:orientation(vertical):tickMarksShape(line) .tick {
  height: value(tickLineWidth);
  width: value(tickLineHeight);
}

.root:tickMarksShape(dot) .tick {
  width: value(tickDotSize);
  height: value(tickDotSize);
  border-radius: 50%;
}

.root:orientation(horizontal):tickMarksShape(dot) .tick {
  transform: translateX(calc(- value(tickDotSize) / 2));
}
.root:orientation(vertical):tickMarksShape(dot) .tick {
  transform: translateY(calc(value(tickDotSize) / 2));
}

.root:orientation(horizontal):tickMarksPosition(normal) .tick {
  bottom: 0;
}

.root:orientation(vertical):tickMarksPosition(normal) .tick {
  right: 0;
}

.root:orientation(horizontal):tickMarksPosition(middle) .tick {
  top: 50%;
  transform: translateY(-50%);
}

.root:orientation(vertical):tickMarksPosition(middle) .tick {
  left: 50%;
  transform: translateX(-50%);
}

.root:orientation(horizontal):tickMarksPosition(across) .tick {
  top: 0;
}

.root:orientation(vertical):tickMarksPosition(across) .tick {
  left: 0;
}
